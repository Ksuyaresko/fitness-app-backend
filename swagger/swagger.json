{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.2",
    "title": "Project-01",
    "description": "BE project-01",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    { "url": "https://goit-be.onrender.com/" },
    { "url": "http://localhost:3000" }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Products",
      "description": "Products endpoints"
    },
    {
      "name": "Exercises",
      "description": "Exercises endpoints"
    },
    {
      "name": "Diary",
      "description": "Diary endpoints"
    },
    {
      "name": "Diary Products",
      "description": "Diary Products endpoints"
    },
    {
      "name": "Diary Exercises",
      "description": "Diary Exercises endpoints"
    },
    {
      "name": "Statistics",
      "description": "Retrieve statistics for the application"
    }
  ],
  "paths": {
    "/users/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Email in use",
            "content": {}
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "parameters": [],
        "requestBody": {
          "description": "Login object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Email or password is wrong",
            "content": {}
          }
        }
      }
    },
    "/users/current": {
      "get": {
        "tags": ["Auth"],
        "summary": "User's info",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/users/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logout",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "204": {
            "description": "Successful operation",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/users": {
      "patch": {
        "tags": ["Auth"],
        "summary": "User patch settings",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Settings' object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SettingsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/users/avatars": {
      "post": {
        "tags": ["Auth"],
        "summary": "User's avatar",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Avatar file",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "avatar": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "avatarURL": {
                          "type": "string",
                          "description": "User's avatar url"
                        }
                      }
                    }
                  },
                  "example": {
                    "data": {
                      "avatarURL": "http://res.cloudinary.com/dt2gqhsoc/image/upload/v1705244983/65a2af4959e67bb6e4a0fc83.jpg"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/products": {
      "get": {
        "tags": ["Products"],
        "summary": "Get products with page numbering and options",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number for pagination (default: 1)"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Number of items per page (default: 10)"
          },
          {
            "in": "query",
            "name": "categories",
            "schema": {
              "type": "string",
              "enum": [
                "alcoholic drinks",
                "berries",
                "cereals",
                "dairy",
                "dried fruits",
                "eggs",
                "fish",
                "flour",
                "fruits",
                "meat",
                "mushrooms",
                "nuts",
                "oils and fats",
                "poppy",
                "sausage",
                "seeds",
                "sesame",
                "soft drinks",
                "vegetables and herbs"
              ]
            },
            "description": "List of categories to filter"
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "description": "Keyword for searching products"
          },
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string"
            },
            "description": "Type of products to be received (recommended or notrecommended or all)"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Getting a list of products taking into account the numbering of pages of parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/products/category": {
      "get": {
        "tags": ["Products"],
        "summary": "Get a list of product categories",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Getting a list of products categories",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductsCategoriesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/exercises/{query}": {
      "get": {
        "tags": ["Exercises"],
        "summary": "Get a list of exercises based on a filter",
        "parameters": [
          {
            "in": "path",
            "name": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["body parts", "equipment", "muscles"]
            },
            "description": "Type of exercise to be received (body parts, equipment or muscles)",
            "example": "equipment"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number for pagination (default: 1)"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Number of items per page (default: 10)"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExercisesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/exercises/bodyPart/{query}": {
      "get": {
        "tags": ["Exercises"],
        "summary": "Get a list of exercises based on a bodyPart",
        "parameters": [
          {
            "in": "path",
            "name": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "chest",
                "upper arms",
                "waist",
                "upper legs",
                "back",
                "shoulders",
                "lower arms",
                "cardio",
                "neck",
                "lower legs"
              ]
            },
            "description": "Type of exercise to be received ",
            "example": "equipment"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number for pagination (default: 1)"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Number of items per page (default: 10)"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExercisesBodyPartsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/diary": {
      "get": {
        "tags": ["Diary"],
        "summary": "Get products and exercise from diary",
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "required": true,
            "allowReserved": true,
            "type": "string",
            "description": "Requested date"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiaryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (The date is not valid or does not match the dd/MM/yyyy format)",
            "content": {}
          }
        }
      }
    },
    "/diary/exercises": {
      "post": {
        "tags": ["Diary Exercises"],
        "summary": "Add exercise to diary",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Object for adding an exercise to a diary",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiaryAddExercisesRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiaryAddExercisesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid exercise ID or Date)",
            "content": {}
          }
        }
      }
    },
    "/diary/exercises/{id}": {
      "delete": {
        "tags": ["Diary Exercises"],
        "summary": "Delete exercise from diary",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "description": "Diary entry ID"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiaryDeleteExercisesResponse"
                }
              }
            }
          },
          "404": {
            "description": "Diary entry not found",
            "content": {}
          }
        }
      }
    },
    "/diary/products": {
      "post": {
        "tags": ["Diary Products"],
        "summary": "Add a product to diary",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "Object for adding a product to the diary",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiaryAddProductsRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiaryAddProductsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          }
        }
      }
    },
    "/diary/products/{id}": {
      "delete": {
        "tags": ["Diary Products"],
        "summary": "Delete product from diary",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "description": "Diary entry ID",
            "example": "65a5a1cda706b9e74adf1273"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiaryDeleteProductsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid ID)",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          }
        }
      }
    },
    "/statistics": {
      "get": {
        "tags": ["Statistics"],
        "summary": "Get statistics",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Statistics"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "name"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "token": {
                "type": "string",
                "description": "User's jwt token"
              }
            }
          }
        },
        "example": {
          "data": {
            "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1OWZjNGZhNzc4MjE4MjEyY2RkZGI5YSIsImlhdCI6MTcwNDk2OTQ2NiwiZXhwIjoxNzA1MDU1ODY2fQ.mjIVXDKk3-W22awzxy3EWSgOBwrG8Rwnzs8UqpqmFww"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "SettingsRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Name"
          },
          "height": {
            "type": "number",
            "description": "minimum 150(cm); required",
            "example": 150
          },
          "currentWeight": {
            "type": "number",
            "description": "minimum 35(kg); required",
            "example": 35
          },
          "desiredWeight": {
            "type": "number",
            "description": "minimum 35(kg); required",
            "example": 35
          },
          "birthday": {
            "type": "string",
            "description": "iso string, must be older than 18 years;  required",
            "example": "2005-01-11T00:00:00.000Z"
          },
          "blood": {
            "type": "number",
            "description": "allowed values 1, 2, 3, 4; require",
            "example": 1
          },
          "sex": {
            "type": "string",
            "description": "allowed values \"male\", \"female\"; required",
            "example": "male"
          },
          "levelActivity": {
            "type": "number",
            "description": "allowed values 1, 2, 3, 4, 5; required",
            "example": 1
          }
        }
      },
      "SettingsResponse": {
        "type": "object",
        "properties": {
          "dailyActivity": {
            "type": "number",
            "description": "",
            "example": 110
          },
          "dailyCalories": {
            "type": "number",
            "description": "",
            "example": 2200
          }
        }
      },
      "UsersResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "description": "User's email"
              },
              "name": {
                "type": "string",
                "description": "User's name"
              },
              "dailyCalories": {
                "type": "number",
                "description": ""
              },
              "dailyActivity": {
                "type": "number",
                "description": ""
              },
              "settings": {
                "type": "object",
                "properties": {
                  "height": {
                    "type": "number",
                    "description": ""
                  },
                  "currentWeight": {
                    "type": "number",
                    "description": ""
                  },
                  "desiredWeight": {
                    "type": "number",
                    "description": ""
                  },
                  "birthday": {
                    "type": "string",
                    "description": ""
                  },
                  "blood": {
                    "type": "number",
                    "description": ""
                  },
                  "sex": {
                    "type": "string",
                    "description": "male or female"
                  },
                  "levelActivity": {
                    "type": "number",
                    "description": "1, 2, 3, 4, 5"
                  }
                }
              }
            }
          }
        },
        "example": {
          "data": {
            "email": "test@test.com",
            "name": "name",
            "dailyCalories": 2200,
            "dailyActivity": 110,
            "settings": {
              "height": 180,
              "currentWeight": 70,
              "desiredWeight": 60,
              "birthday": "2005-01-11T00:00:00.000Z",
              "blood": 1,
              "sex": "male",
              "levelActivity": 3
            }
          }
        }
      },
      "ProductsResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "weight": {
                  "type": "number",
                  "description": "product weight"
                },
                "calories": {
                  "type": "number",
                  "description": "product calories"
                },
                "category": {
                  "type": "string",
                  "description": "product category"
                },
                "title": {
                  "type": "string",
                  "description": "product title"
                },
                "groupBloodNotAllowed": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "boolean"
                  },
                  "description": "Blood group"
                }
              }
            }
          },
          "totalItems": {
            "type": "integer",
            "description": "Total number of items"
          }
        },
        "example": {
          "data": [
            {
              "weight": 100,
              "calories": 340,
              "category": "dairy",
              "title": "Danbo cheese",
              "groupBloodNotAllowed": {
                "1": true,
                "2": true,
                "3": false,
                "4": false
              }
            }
          ],
          "totalItems": 100
        }
      },
      "ProductsCategoriesResponse": {
        "type": "object",
        "properties": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "The name of the product category"
          }
        },
        "example": [
          "alcoholic drinks",
          "berries",
          "cereals",
          "dairy",
          "dried fruits",
          "eggs",
          "fish",
          "flour",
          "fruits",
          "meat",
          "mushrooms",
          "nuts",
          "oils and fats",
          "poppy",
          "sausage",
          "seeds",
          "sesame",
          "soft drinks",
          "vegetables and herbs"
        ]
      },
      "ExercisesResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "Filtered value"
              },
              "name": {
                "type": "string",
                "description": "The name of the exercise"
              },
              "imgURL": {
                "type": "string",
                "description": "Link to the picture"
              }
            }
          },
          "totalItems": {
            "type": "integer",
            "description": "Total number of items"
          }
        },
        "example": {
          "data": [
            {
              "filter": "Muscles",
              "name": "adductors",
              "imgURL": "https://ftp.goit.study/img/power-pulse/filters/adductors_fmkryf.jpg"
            }
          ],
          "totalItems": 20
        }
      },
      "ExercisesBodyPartsResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "bodyPart": {
                "type": "string",
                "description": "Body part selection"
              },
              "equipment": {
                "type": "string",
                "description": "Type of equipment"
              },
              "gifUrl": {
                "type": "string",
                "description": "Exercise animation"
              },
              "name": {
                "type": "string",
                "description": "The name of the exercise"
              },
              "target": {
                "type": "string",
                "description": "Type of muscle"
              },
              "burnedCalories": {
                "type": "number",
                "description": "Burned calories"
              },
              "time": {
                "type": "number",
                "description": "Exercise time"
              }
            }
          },
          "totalItems": {
            "type": "integer",
            "description": "Total number of items"
          }
        },
        "example": {
          "data": [
            {
              "bodyPart": "upper arms",
              "equipment": "dumbbell",
              "gifUrl": "https://ftp.goit.study/img/power-pulse/gifs/0315.gif",
              "name": "dumbbell incline biceps curl",
              "target": "biceps",
              "burnedCalories": 88,
              "time": 3
            }
          ],
          "totalItems": 20
        }
      },
      "DiaryResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "productsResult": {
                "type": "object",
                "properties": {
                  "products": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "description": "Diary entry ID"
                        },
                        "product_ID": {
                          "type": "string",
                          "description": "Products ID from Data-Base"
                        },
                        "date": {
                          "type": "string",
                          "description": "Date the product was consumed"
                        },
                        "amount": {
                          "type": "integer",
                          "description": "Amount of product"
                        },
                        "title": {
                          "type": "string",
                          "description": "Name of the product"
                        },
                        "category": {
                          "type": "integer",
                          "description": "Category of the product"
                        },
                        "calories": {
                          "type": "integer",
                          "description": "number of calories in the product"
                        },
                        "groupBloodNotAllowed": {
                          "type": "object",
                          "properties": {
                            "1": {
                              "type": "boolean",
                              "description": "Prohibition of consumption according to the user's blood type"
                            },
                            "2": {
                              "type": "boolean",
                              "description": "Prohibition of consumption according to the user's blood type"
                            },
                            "3": {
                              "type": "boolean",
                              "description": "Prohibition of consumption according to the user's blood type"
                            },
                            "4": {
                              "type": "boolean",
                              "description": "Prohibition of consumption according to the user's blood type"
                            }
                          }
                        },
                        "recommend": {
                          "type": "boolean",
                          "description": "Whether the product is recommended according to the user's blood type"
                        }
                      }
                    }
                  },
                  "caloriesConsumedTotal": {
                    "type": "integer",
                    "description": "Sum of calories consumed by the user per day"
                  }
                }
              },
              "exercisesResult": {
                "type": "object",
                "properties": {
                  "exercises": {
                    "type": "array",
                    "items": {
                      "_id": {
                        "type": "string",
                        "description": "Diary entry ID"
                      },
                      "time": {
                        "type": "integer",
                        "description": "How long did the exercise last, in minutes"
                      },
                      "burnedCalories": {
                        "type": "integer",
                        "description": "How many calories this exercise burned during the time"
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the exercise"
                      },
                      "target": {
                        "type": "string",
                        "description": "Target muscle trained by this exercise"
                      },
                      "equipment": {
                        "type": "string",
                        "description": "Necessary equipment for the exercise"
                      },
                      "bodyPart": {
                        "type": "string",
                        "description": "Part of the body that works in the exercise"
                      }
                    }
                  },
                  "timeTotal": {
                    "type": "integer",
                    "description": "Total time spent on all exercises per day"
                  },
                  "caloriesBurned": {
                    "type": "integer",
                    "description": "Sum of calories burned by the user per day"
                  }
                }
              }
            }
          }
        },
        "example": {
          "data": {
            "productsResult": {
              "products": [
                {
                  "_id": "65aac0982873bb543d157ad4",
                  "product_ID": "5d51694902b2373622ff5b7f",
                  "date": "12/12/6100",
                  "amount": 25,
                  "calories": 23,
                  "title": "marlin",
                  "category": "fish",
                  "groupBloodNotAllowed": {
                    "1": false,
                    "2": false,
                    "3": false,
                    "4": false
                  },
                  "recommend": false
                },
                {
                  "_id": "65aac0992873bb543d157ad7",
                  "product_ID": "5d51694902b2373622ff5b7f",
                  "date": "12/12/6100",
                  "amount": 25,
                  "calories": 23,
                  "title": "marlin",
                  "category": "fish",
                  "groupBloodNotAllowed": {
                    "1": false,
                    "2": false,
                    "3": false,
                    "4": false
                  },
                  "recommend": false
                }
              ],
              "caloriesConsumedTotal": 46
            },
            "exercisesResult": {
              "exercises": [
                {
                  "_id": "65abc2a98d4f11c8ced27565",
                  "time": 21,
                  "burnedCalories": 300,
                  "name": "barbell standing leg calf raise",
                  "target": "calves",
                  "equipment": "barbell",
                  "bodyPart": "lower legs"
                },
                {
                  "_id": "65abc2ca8d4f11c8ced27570",
                  "time": 21,
                  "burnedCalories": 300,
                  "name": "barbell standing leg calf raise",
                  "target": "calves",
                  "equipment": "barbell",
                  "bodyPart": "lower legs"
                }
              ],
              "timeTotal": 42,
              "caloriesBurnedTotal": 600
            }
          }
        }
      },
      "DiaryAddExercisesRequest": {
        "type": "object",
        "required": ["time", "date", "calories", "exercise_ID"],
        "properties": {
          "time": {
            "type": "integer",
            "description": "How long did the exercise last, in minutes",
            "example": 5
          },
          "date": {
            "type": "string",
            "description": "Date the exercise was performed",
            "example": "15/01/2024"
          },
          "calories": {
            "type": "integer",
            "description": "How many calories were spent on the exercise",
            "example": 300
          },
          "exercise_ID": {
            "type": "string",
            "description": "Exercise ID from Data-Base",
            "example": "64f2458d6f67bc34bae4f857"
          }
        }
      },
      "DiaryAddExercisesResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "doneExercise": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "description": "Diary entry ID"
                  },
                  "ownerId": {
                    "type": "string",
                    "description": "Id of the user who performed the exercise"
                  },
                  "date": {
                    "type": "string",
                    "description": "Date when exercise was performed"
                  },
                  "time": {
                    "type": "integer",
                    "description": "How long did the exercise last, in minutes"
                  },
                  "calories": {
                    "type": "integer",
                    "description": "How many calories this exercise burned during the time"
                  },
                  "exercise_ID": {
                    "type": "string",
                    "description": "Exercise ID from Data-Base"
                  }
                }
              },
              "caloriesBurnedTotal": {
                "type": "integer",
                "description": "Calories burned on this date"
              }
            }
          }
        },
        "example": {
          "data": {
            "doneExercise": {
              "ownerId": "65a11a2a1f2ac88efe6329fc",
              "calories": 300,
              "date": "12/12/2000",
              "time": 21,
              "exercise_ID": "64f2458d6f67bc34bae4f857",
              "_id": "65ad91ee564161eaf71d0d5b"
            },
            "caloriesBurnedTotal": 900
          }
        }
      },
      "DiaryDeleteExercisesResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "description": "Notification of successful deletion of a diary entry"
              },
              "caloriesBurnedTotal": {
                "type": "integer",
                "description": "Calories burned on this date"
              }
            }
          }
        },
        "example": {
          "data": {
            "message": "Diary entry successfully deleted",
            "caloriesBurnedTotal": 600
          }
        }
      },
      "DiaryAddProductsRequest": {
        "type": "object",
        "required": ["product_ID", "date", "amount", "calories"],
        "properties": {
          "product_ID": {
            "type": "string",
            "description": "ID product",
            "example": "5d51694902b2373622ff5773"
          },
          "date": {
            "type": "string",
            "description": "Date add product to dairy",
            "example": "15/01/2024"
          },
          "amount": {
            "type": "number",
            "description": "Amount product",
            "example": 90
          },
          "calories": {
            "type": "number",
            "description": "Calories consumed",
            "example": 150
          }
        }
      },
      "DiaryAddProductsResponse": {
        "type": "object",
        "properties": {
          "product": {
            "type": "object",
            "description": "Add product in diary",
            "properties": {
              "_id": {
                "type": "string",
                "description": "ID product in diary",
                "example": "5d51694902b2373622ff5b6f"
              },
              "product_ID": {
                "type": "string",
                "description": "Product-ID in the list of all products",
                "example": "5d51694902b2373622ff5773"
              },
              "date": {
                "type": "string",
                "description": "Date add product to dairy",
                "example": "15/01/2024"
              },
              "amount": {
                "type": "integer",
                "description": "Amount product",
                "example": 90
              },
              "calories": {
                "type": "integer",
                "description": "Calories consumed",
                "example": 150
              },
              "owner": {
                "type": "string",
                "description": "User`s ID",
                "example": "65a45e22f46e25e508a9ffb7"
              }
            }
          },
          "caloriesConsumedTotal": {
            "type": "integer",
            "description": "Sum of calories consumed by the user per day",
            "example": 295
          }
        }
      },
      "DiaryDeleteProductsResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Notification of successful deletion of a diary entry",
            "example": "The product has been removed from the diary"
          },
          "caloriesConsumedTotal": {
            "type": "integer",
            "description": "Sum of calories consumed by the user per day",
            "example": 236
          }
        }
      },
      "Statistics": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "totalVideo": {
                "type": "number",
                "description": "How many exercise videos are in the app"
              },
              "totalUsersCalories": {
                "type": "number",
                "description": "What is the total number of calories burned by all registered users"
              },
              "totalUsers": {
                "type": "number",
                "description": "What is the total number of users registered in the application"
              },
              "totalTrainingHoursUsers": {
                "type": "number",
                "description": "What is the total number of hours spent on exercises by registered users"
              },
              "totalTrainingUsers": {
                "type": "number",
                "description": "What is the total number of exercises performed by registered users"
              }
            }
          }
        },
        "example": {
          "data": {
            "totalVideo": 10,
            "totalUsersCalories": 5000,
            "totalUsers": 20,
            "totalTrainingHoursUsers": 100,
            "totalTrainingUsers": 5
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
